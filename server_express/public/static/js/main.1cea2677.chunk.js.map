{"version":3,"sources":["actions/index.js","components/Form.js","components/TodoItem.js","components/TodoItemList.js","components/TodoListTemplate.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["apiUrl","process","Form","state","todo","handleChange","e","setState","target","value","handleCreate","props","addTodo","text","checked","handleKeyPress","key","this","className","onChange","onKeyPress","onClick","Component","connect","dispatch","axios","post","then","res","type","payload","data","catch","error","console","TodoItem","handleRemove","id","removeTodo","handleToggle","toggleTodo","nextProps","nextState","todo_obj","stopPropagation","delete","log","put","TodoItemList","fetchTodos","todos","todoList","map","get","TodoListTemplate","form","children","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","Object","assign","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cea2677.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//Action type 정의\r\nexport const FETCH_TODOS = \"FETCH_TODOS\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\n\r\nconst apiUrl = process.env.REACT_APP_APIURL;\r\n//`http://localhost:4500/api/todos`;\r\n\r\n//4. Todo 갱신\r\nexport const toggleTodo = (todo) => {\r\n    return (dispatch) => {\r\n        axios.put(`${apiUrl}/${todo.id}`, todo)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: TOGGLE_TODO,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw (error);\r\n            })\r\n    }\r\n};\r\n//3. Todo 삭제\r\nexport const removeTodo = (id) => {\r\n    return (dispatch) => {\r\n        axios.delete(`${apiUrl}/${id}`)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: REMOVE_TODO,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw (error);\r\n            })\r\n    }\r\n}\r\n\r\n//2. Todo 등록\r\nexport const addTodo = (todo) => {\r\n    return (dispatch) => {\r\n        axios.post(apiUrl, todo)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: ADD_TODO,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                throw (error);\r\n            });\r\n\r\n    }\r\n};\r\n//1. Todo 리스트\r\nexport const fetchTodos = () => {\r\n    return (dispatch) => {\r\n        axios.get(apiUrl)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: FETCH_TODOS,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                throw (error);\r\n            });\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTodo } from '../actions';\r\nimport './Form.css';\r\n\r\nclass Form extends Component {\r\n    //상태변수\r\n    state = {\r\n        todo: ''\r\n    };\r\n    //Event Handler Method 선언\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            todo: e.target.value // todo 의 다음 바뀔 값\r\n        });\r\n    };\r\n    handleCreate = () => {\r\n        const { todo } = this.state;\r\n        this.props.addTodo({\r\n            text: todo,\r\n            checked: false\r\n        });\r\n        this.setState({\r\n            todo:''\r\n        });\r\n    };\r\n    handleKeyPress = (e) => {\r\n        // 눌려진 키가 Enter 이면 handleCreate 호출\r\n        if (e.key === 'Enter') {\r\n            this.handleCreate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { todo } = this.state;\r\n        const {handleChange, handleKeyPress, handleCreate } = this;\r\n        return (\r\n            <div className=\"form\">\r\n                <input value={todo} onChange={handleChange}\r\n                    onKeyPress={handleKeyPress} />\r\n                <div className=\"create-button\" onClick={handleCreate}>\r\n                    추가\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default connect(null,{addTodo})(Form);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './TodoItem.css';\r\nimport { removeTodo, toggleTodo } from '../actions';\r\n\r\nclass TodoItem extends Component {\r\n    //scu 메서드가 \r\n    //true를 리턴하면(checked 같지 않음) render() 메서드가 다시 호출됨\r\n    //false를 리턴하면(checked 같음) render() 메서드가 다시 호출되지 않는다\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.checked !== nextProps.checked;\r\n    }\r\n\r\n    handleRemove = (id) => {\r\n        this.props.removeTodo(id);\r\n    }\r\n\r\n    handleToggle = (todo) => {\r\n        this.props.toggleTodo(todo);\r\n    }\r\n\r\n    render() {\r\n        const { text, checked, id } = this.props;\r\n        const { handleRemove, handleToggle } = this;\r\n\r\n        return (\r\n            <div className=\"todo-item\" onClick={() => {\r\n                const todo_obj = {id, text, checked};\r\n                todo_obj.checked = !todo_obj.checked;\r\n                handleToggle(todo_obj);\r\n            }}>\r\n                <div className=\"remove\" onClick={(e) => {\r\n                    e.stopPropagation(); // myToggle 이 실행되지 않도록 함\r\n                    handleRemove(id)\r\n                }\r\n                }>&times;</div>\r\n                <div className={`todo-text ${checked && 'checked'}`}>\r\n                    <div>{text}</div>\r\n                </div>\r\n                {\r\n                    checked && (<div className=\"check-mark\">✓</div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(null, {removeTodo, toggleTodo})(TodoItem);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TodoItem from './TodoItem';\r\nimport { fetchTodos } from '../actions';\r\n\r\n\r\nclass TodoItemList extends Component {\r\n    //mount 된 후에 호출되는 lifecycle method\r\n    componentDidMount() {\r\n        this.props.fetchTodos();\r\n    }\r\n    \r\n    //scu 메서드가 \r\n    //true를 리턴하면(todos가 같지 않음) render() 메서드가 다시 호출됨\r\n    //false를 리턴하면(todos가 같음) render() 메서드가 다시 호출되지 않는다    \r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.todos !== nextProps.todos;\r\n    }\r\n\r\n    render() {\r\n        const { todos } = this.props;\r\n        const todoList = todos.map(\r\n            ({ id, text, checked }) => (\r\n                <TodoItem\r\n                    id={id}\r\n                    text={text}\r\n                    checked={checked}\r\n                    key={id}\r\n                />\r\n            )\r\n        );\r\n        return (\r\n            <div>\r\n                {todoList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    (state) => ({\r\n        todos: state.todos\r\n    }),\r\n    {\r\n        fetchTodos\r\n    }\r\n)(TodoItemList);","import React from 'react';\r\nimport './TodoListTemplate.css';\r\nconst TodoListTemplate = ({ form, children }) => {\r\n    return (\r\n        <main className=\"todo-list-template\">\r\n            <div className=\"title\">\r\n                오늘의 할 일 ({process.env.REACT_APP_TITLE})\r\n            </div>\r\n            <section className=\"form-wrapper\">\r\n                {form}\r\n            </section>\r\n            <section className=\"todos-wrapper\">\r\n                {children}\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\nexport default TodoListTemplate;\r\n","import React, { Component } from 'react';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport TodoListTemplate from './components/TodoListTemplate';\n\nclass App extends Component {\n  //렌더링 lifecycle method\n  render() {\n\n    return (\n      <div>\n        <TodoListTemplate form={<Form />}>\n          <div>\n            <TodoItemList />\n          </div>\n        </TodoListTemplate>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from '../actions';\r\n\r\nconst initialState = {\r\n    todos: [\r\n        {\r\n            id: 0,\r\n            text: '',\r\n            checked: false,\r\n        }\r\n    ]\r\n}\r\n//reducer 함수 정의\r\nexport const toDoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.TOGGLE_TODO:\r\n        case types.REMOVE_TODO:\r\n        case types.ADD_TODO:\r\n        case types.FETCH_TODOS:\r\n            return Object.assign({}, state, { todos: action.payload });\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { toDoReducer } from './reducers';\n\nconst store = createStore(toDoReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}